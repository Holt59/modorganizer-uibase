# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.12")
   message(FATAL_ERROR "CMake >= 2.8.12 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.12...3.27)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS mo2::uibase)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target mo2::uibase
add_library(mo2::uibase SHARED IMPORTED)

set_target_properties(mo2::uibase PROPERTIES
  INTERFACE_LINK_LIBRARIES "Qt6::Widgets;Qt6::Network;Qt6::QuickWidgets"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(mo2::uibase
    INTERFACE
      FILE_SET "HEADERS"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/uibase/delayedfilewriter.h" "${_IMPORT_PREFIX}/include/uibase/diagnosisreport.h" "${_IMPORT_PREFIX}/include/uibase/dllimport.h" "${_IMPORT_PREFIX}/include/uibase/errorcodes.h" "${_IMPORT_PREFIX}/include/uibase/eventfilter.h" "${_IMPORT_PREFIX}/include/uibase/exceptions.h" "${_IMPORT_PREFIX}/include/uibase/executableinfo.h" "${_IMPORT_PREFIX}/include/uibase/expanderwidget.h" "${_IMPORT_PREFIX}/include/uibase/filemapping.h" "${_IMPORT_PREFIX}/include/uibase/filesystemutilities.h" "${_IMPORT_PREFIX}/include/uibase/filterwidget.h" "${_IMPORT_PREFIX}/include/uibase/finddialog.h" "${_IMPORT_PREFIX}/include/uibase/formatters.h" "${_IMPORT_PREFIX}/include/uibase/guessedvalue.h" "${_IMPORT_PREFIX}/include/uibase/idownloadmanager.h" "${_IMPORT_PREFIX}/include/uibase/ifiletree.h" "${_IMPORT_PREFIX}/include/uibase/iinstallationmanager.h" "${_IMPORT_PREFIX}/include/uibase/imodinterface.h" "${_IMPORT_PREFIX}/include/uibase/imodlist.h" "${_IMPORT_PREFIX}/include/uibase/imodrepositorybridge.h" "${_IMPORT_PREFIX}/include/uibase/imoinfo.h" "${_IMPORT_PREFIX}/include/uibase/iplugin.h" "${_IMPORT_PREFIX}/include/uibase/iplugindiagnose.h" "${_IMPORT_PREFIX}/include/uibase/ipluginfilemapper.h" "${_IMPORT_PREFIX}/include/uibase/iplugingame.h" "${_IMPORT_PREFIX}/include/uibase/iplugingamefeatures.h" "${_IMPORT_PREFIX}/include/uibase/iplugininstaller.h" "${_IMPORT_PREFIX}/include/uibase/iplugininstallercustom.h" "${_IMPORT_PREFIX}/include/uibase/iplugininstallersimple.h" "${_IMPORT_PREFIX}/include/uibase/ipluginlist.h" "${_IMPORT_PREFIX}/include/uibase/ipluginmodpage.h" "${_IMPORT_PREFIX}/include/uibase/ipluginpreview.h" "${_IMPORT_PREFIX}/include/uibase/ipluginproxy.h" "${_IMPORT_PREFIX}/include/uibase/iplugintool.h" "${_IMPORT_PREFIX}/include/uibase/iprofile.h" "${_IMPORT_PREFIX}/include/uibase/isavegame.h" "${_IMPORT_PREFIX}/include/uibase/isavegameinfowidget.h" "${_IMPORT_PREFIX}/include/uibase/json.h" "${_IMPORT_PREFIX}/include/uibase/lineeditclear.h" "${_IMPORT_PREFIX}/include/uibase/linklabel.h" "${_IMPORT_PREFIX}/include/uibase/log.h" "${_IMPORT_PREFIX}/include/uibase/memoizedlock.h" "${_IMPORT_PREFIX}/include/uibase/moassert.h" "${_IMPORT_PREFIX}/include/uibase/modrepositoryfileinfo.h" "${_IMPORT_PREFIX}/include/uibase/nxmurl.h" "${_IMPORT_PREFIX}/include/uibase/pluginrequirements.h" "${_IMPORT_PREFIX}/include/uibase/pluginsetting.h" "${_IMPORT_PREFIX}/include/uibase/questionboxmemory.h" "${_IMPORT_PREFIX}/include/uibase/registry.h" "${_IMPORT_PREFIX}/include/uibase/report.h" "${_IMPORT_PREFIX}/include/uibase/safewritefile.h" "${_IMPORT_PREFIX}/include/uibase/scopeguard.h" "${_IMPORT_PREFIX}/include/uibase/sortabletreewidget.h" "${_IMPORT_PREFIX}/include/uibase/steamutility.h" "${_IMPORT_PREFIX}/include/uibase/taskprogressmanager.h" "${_IMPORT_PREFIX}/include/uibase/textviewer.h" "${_IMPORT_PREFIX}/include/uibase/tutorabledialog.h" "${_IMPORT_PREFIX}/include/uibase/tutorialcontrol.h" "${_IMPORT_PREFIX}/include/uibase/tutorialmanager.h" "${_IMPORT_PREFIX}/include/uibase/utility.h" "${_IMPORT_PREFIX}/include/uibase/versioninfo.h" "${_IMPORT_PREFIX}/include/uibase/widgetutility.h" "${_IMPORT_PREFIX}/include/uibase/formatters/enums.h" "${_IMPORT_PREFIX}/include/uibase/formatters/qt.h" "${_IMPORT_PREFIX}/include/uibase/formatters/random_access_containers.h" "${_IMPORT_PREFIX}/include/uibase/formatters/strings.h" "${_IMPORT_PREFIX}/include/uibase/game_features/bsainvalidation.h" "${_IMPORT_PREFIX}/include/uibase/game_features/dataarchives.h" "${_IMPORT_PREFIX}/include/uibase/game_features/game_feature.h" "${_IMPORT_PREFIX}/include/uibase/game_features/gameplugins.h" "${_IMPORT_PREFIX}/include/uibase/game_features/igamefeatures.h" "${_IMPORT_PREFIX}/include/uibase/game_features/localsavegames.h" "${_IMPORT_PREFIX}/include/uibase/game_features/moddatachecker.h" "${_IMPORT_PREFIX}/include/uibase/game_features/moddatacontent.h" "${_IMPORT_PREFIX}/include/uibase/game_features/savegameinfo.h" "${_IMPORT_PREFIX}/include/uibase/game_features/scriptextender.h" "${_IMPORT_PREFIX}/include/uibase/game_features/unmanagedmods.h"
  )
else()
  set_property(TARGET mo2::uibase
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/mo2-uibase-targets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  if(CMAKE_VERSION VERSION_LESS "3.28"
      OR NOT DEFINED _cmake_import_check_xcframework_for_${_cmake_target}
      OR NOT IS_DIRECTORY "${_cmake_import_check_xcframework_for_${_cmake_target}}")
    foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
      if(NOT EXISTS "${_cmake_file}")
        message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
      endif()
    endforeach()
  endif()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
